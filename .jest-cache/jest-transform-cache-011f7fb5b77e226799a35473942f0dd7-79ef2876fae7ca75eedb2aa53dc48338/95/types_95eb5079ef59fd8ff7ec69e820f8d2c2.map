{"version":3,"sources":["/workspaces/blipee-os/src/lib/monitoring/types.ts"],"sourcesContent":["export enum MetricType {\n  COUNTER = 'counter',\n  GAUGE = 'gauge',\n  HISTOGRAM = 'histogram',\n  SUMMARY = 'summary',\n}\n\nexport enum AlertSeverity {\n  INFO = 'info',\n  WARNING = 'warning',\n  ERROR = 'error',\n  CRITICAL = 'critical',\n}\n\nexport enum AlertChannel {\n  EMAIL = 'email',\n  SMS = 'sms',\n  SLACK = 'slack',\n  PAGERDUTY = 'pagerduty',\n  WEBHOOK = 'webhook',\n}\n\nexport interface Metric {\n  name: string;\n  type: MetricType;\n  value: number;\n  labels?: Record<string, string>;\n  timestamp?: Date;\n}\n\nexport interface Alert {\n  id: string;\n  name: string;\n  severity: AlertSeverity;\n  message: string;\n  details?: Record<string, any>;\n  metric?: string;\n  threshold?: number;\n  currentValue?: number;\n  timestamp: Date;\n  resolved?: boolean;\n  resolvedAt?: Date;\n}\n\nexport interface AlertRule {\n  id: string;\n  name: string;\n  description?: string;\n  metric: string;\n  condition: 'gt' | 'gte' | 'lt' | 'lte' | 'eq' | 'neq';\n  threshold: number;\n  duration?: number; // seconds\n  severity: AlertSeverity;\n  channels: AlertChannel[];\n  enabled: boolean;\n  metadata?: Record<string, any>;\n}\n\nexport interface SecurityEvent {\n  id: string;\n  type: string;\n  severity: AlertSeverity;\n  source: string;\n  userId?: string;\n  ip?: string;\n  userAgent?: string;\n  details: Record<string, any>;\n  timestamp: Date;\n  handled: boolean;\n}\n\nexport interface HealthCheck {\n  service: string;\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  responseTime?: number;\n  lastCheck: Date;\n  details?: Record<string, any>;\n}\n\nexport interface MonitoringDashboard {\n  metrics: {\n    requests: {\n      total: number;\n      success: number;\n      failure: number;\n      rate: number; // per minute\n    };\n    security: {\n      loginAttempts: number;\n      failedLogins: number;\n      mfaVerifications: number;\n      suspiciousActivities: number;\n    };\n    performance: {\n      avgResponseTime: number;\n      p95ResponseTime: number;\n      p99ResponseTime: number;\n      errorRate: number;\n    };\n    system: {\n      cpuUsage: number;\n      memoryUsage: number;\n      diskUsage: number;\n      activeConnections: number;\n    };\n  };\n  alerts: Alert[];\n  healthChecks: HealthCheck[];\n  recentEvents: SecurityEvent[];\n}\n\nexport interface NotificationConfig {\n  email?: {\n    enabled: boolean;\n    recipients: string[];\n    smtpConfig?: {\n      host: string;\n      port: number;\n      secure: boolean;\n      auth: {\n        user: string;\n        pass: string;\n      };\n    };\n  };\n  sms?: {\n    enabled: boolean;\n    recipients: string[];\n    provider: 'twilio' | 'aws-sns';\n    config: Record<string, string>;\n  };\n  slack?: {\n    enabled: boolean;\n    webhookUrl: string;\n    channel?: string;\n    username?: string;\n  };\n  pagerduty?: {\n    enabled: boolean;\n    integrationKey: string;\n    serviceId: string;\n  };\n  webhook?: {\n    enabled: boolean;\n    url: string;\n    headers?: Record<string, string>;\n    secret?: string;\n  };\n}"],"names":["MetricType","AlertSeverity","AlertChannel"],"mappings":";;;;;;;;;;;;;;;;;;;;;;UAAYA;;;;;GAAAA,eAAAA;;UAOAC;;;;;GAAAA,kBAAAA;;UAOAC;;;;;;GAAAA,iBAAAA"}