{"version":3,"sources":["/workspaces/blipee-os/src/lib/audit/types.ts"],"sourcesContent":["export enum AuditEventType {\n  // Authentication Events\n  AUTH_LOGIN_SUCCESS = 'auth.login.success',\n  AUTH_LOGIN_FAILED = 'auth.login.failed',\n  AUTH_LOGOUT = 'auth.logout',\n  AUTH_MFA_ENABLED = 'auth.mfa.enabled',\n  AUTH_MFA_DISABLED = 'auth.mfa.disabled',\n  AUTH_MFA_VERIFIED = 'auth.mfa.verified',\n  AUTH_MFA_FAILED = 'auth.mfa.failed',\n  \n  // WebAuthn Events\n  MFA_WEBAUTHN_REGISTRATION_STARTED = 'mfa.webauthn.registration.started',\n  MFA_WEBAUTHN_REGISTERED = 'mfa.webauthn.registered',\n  MFA_WEBAUTHN_REGISTRATION_FAILED = 'mfa.webauthn.registration.failed',\n  MFA_WEBAUTHN_AUTHENTICATION_STARTED = 'mfa.webauthn.authentication.started',\n  MFA_WEBAUTHN_VERIFIED = 'mfa.webauthn.verified',\n  MFA_WEBAUTHN_VERIFICATION_FAILED = 'mfa.webauthn.verification.failed',\n  MFA_WEBAUTHN_CREDENTIAL_DELETED = 'mfa.webauthn.credential.deleted',\n  MFA_WEBAUTHN_CREDENTIAL_DISABLED = 'mfa.webauthn.credential.disabled',\n  MFA_WEBAUTHN_COUNTER_ANOMALY = 'mfa.webauthn.counter.anomaly',\n  AUTH_PASSWORD_CHANGED = 'auth.password.changed',\n  AUTH_PASSWORD_RESET = 'auth.password.reset',\n  AUTH_SESSION_CREATED = 'auth.session.created',\n  AUTH_SESSION_TERMINATED = 'auth.session.terminated',\n  \n  // User Management\n  USER_CREATED = 'user.created',\n  USER_UPDATED = 'user.updated',\n  USER_DELETED = 'user.deleted',\n  USER_INVITED = 'user.invited',\n  USER_INVITATION_ACCEPTED = 'user.invitation.accepted',\n  USER_ROLE_CHANGED = 'user.role.changed',\n  USER_PERMISSIONS_CHANGED = 'user.permissions.changed',\n  \n  // Organization Management\n  ORG_CREATED = 'org.created',\n  ORG_UPDATED = 'org.updated',\n  ORG_DELETED = 'org.deleted',\n  ORG_MEMBER_ADDED = 'org.member.added',\n  ORG_MEMBER_REMOVED = 'org.member.removed',\n  ORG_SETTINGS_CHANGED = 'org.settings.changed',\n  \n  // Building Management\n  BUILDING_CREATED = 'building.created',\n  BUILDING_UPDATED = 'building.updated',\n  BUILDING_DELETED = 'building.deleted',\n  BUILDING_ACCESS_GRANTED = 'building.access.granted',\n  BUILDING_ACCESS_REVOKED = 'building.access.revoked',\n  \n  // Data Operations\n  DATA_EXPORTED = 'data.exported',\n  DATA_IMPORTED = 'data.imported',\n  DATA_DELETED = 'data.deleted',\n  DATA_ACCESSED = 'data.accessed',\n  DATA_MODIFIED = 'data.modified',\n  \n  // Security Events\n  SECURITY_THREAT_DETECTED = 'security.threat.detected',\n  SECURITY_RATE_LIMIT_EXCEEDED = 'security.rate_limit.exceeded',\n  SECURITY_SUSPICIOUS_ACTIVITY = 'security.suspicious.activity',\n  SECURITY_ACCESS_DENIED = 'security.access.denied',\n  SECURITY_POLICY_VIOLATION = 'security.policy.violation',\n  \n  // API Events\n  API_KEY_CREATED = 'api.key.created',\n  API_KEY_REVOKED = 'api.key.revoked',\n  API_REQUEST_FAILED = 'api.request.failed',\n  API_QUOTA_EXCEEDED = 'api.quota.exceeded',\n  \n  // System Events\n  SYSTEM_ERROR = 'system.error',\n  SYSTEM_MAINTENANCE = 'system.maintenance',\n  SYSTEM_CONFIG_CHANGED = 'system.config.changed',\n  SYSTEM_BACKUP_CREATED = 'system.backup.created',\n  SYSTEM_BACKUP_RESTORED = 'system.backup.restored',\n}\n\nexport enum AuditEventSeverity {\n  INFO = 'info',\n  WARNING = 'warning',\n  ERROR = 'error',\n  CRITICAL = 'critical',\n}\n\nexport interface AuditEvent {\n  id: string;\n  timestamp: Date;\n  type: AuditEventType;\n  severity: AuditEventSeverity;\n  actor: {\n    type: 'user' | 'system' | 'api';\n    id?: string;\n    email?: string;\n    ip?: string;\n    userAgent?: string;\n  };\n  target?: {\n    type: string;\n    id: string;\n    name?: string;\n  };\n  context: {\n    organizationId?: string;\n    buildingId?: string;\n    sessionId?: string;\n    requestId?: string;\n    apiKeyId?: string;\n  };\n  metadata: Record<string, any>;\n  changes?: Array<{\n    field: string;\n    oldValue: any;\n    newValue: any;\n  }>;\n  result: 'success' | 'failure';\n  errorDetails?: {\n    code: string;\n    message: string;\n    stackTrace?: string;\n  };\n}\n\nexport interface AuditLogQuery {\n  startDate?: Date;\n  endDate?: Date;\n  types?: AuditEventType[];\n  severities?: AuditEventSeverity[];\n  actorId?: string;\n  actorType?: 'user' | 'system' | 'api';\n  targetId?: string;\n  targetType?: string;\n  organizationId?: string;\n  buildingId?: string;\n  result?: 'success' | 'failure';\n  search?: string;\n  limit?: number;\n  offset?: number;\n  sortBy?: 'timestamp' | 'severity' | 'type';\n  sortOrder?: 'asc' | 'desc';\n}\n\nexport interface AuditLogSummary {\n  totalEvents: number;\n  eventsByType: Record<string, number>;\n  eventsBySeverity: Record<AuditEventSeverity, number>;\n  eventsByResult: {\n    success: number;\n    failure: number;\n  };\n  topActors: Array<{\n    actorId: string;\n    actorEmail?: string;\n    eventCount: number;\n  }>;\n  recentSecurityEvents: AuditEvent[];\n}"],"names":["AuditEventType","AuditEventSeverity"],"mappings":";;;;;;;;;;;;;;;;;;;UAAYA;IACV,wBAAwB;;;;;;;;IASxB,kBAAkB;;;;;;;;;;;;;;IAelB,kBAAkB;;;;;;;;IASlB,0BAA0B;;;;;;;IAQ1B,sBAAsB;;;;;;IAOtB,kBAAkB;;;;;;IAOlB,kBAAkB;;;;;;IAOlB,aAAa;;;;;IAMb,gBAAgB;;;;;;GArENA,mBAAAA;;UA6EAC;;;;;GAAAA,uBAAAA"}